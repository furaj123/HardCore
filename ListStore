package me.furaj123.pl;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

public class ListStore {
    
    private File storageFile;
    private ArrayList<String> values;

    ListStore(File file) {
        this.storageFile = file;
        this.values = new ArrayList<>();
        
        if(this.storageFile.exists()==false){
            try{
                this.storageFile.createNewFile();
            }catch(IOException ex){
                Logger.getLogger(ListStore.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    public void load(){
            try {
            try (DataInputStream input = new DataInputStream(new FileInputStream(this.storageFile)); BufferedReader reader = new BufferedReader(new InputStreamReader(input))) {
                
                String line;
                
                while((line = reader.readLine()) != null){
                    if(this.values.contains(line)==false){
                    this.values.add(line);
                    }
                }
            }
            }catch (Exception ex) {
                Logger.getLogger(ListStore.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    public void save() {
            try {
            try (FileWriter stream = new FileWriter(this.storageFile); BufferedWriter out = new BufferedWriter(stream)) {
                
                for(String value : this.values){
                    out.write(value);
                    out.newLine();
                }
            }
            } catch (IOException ex) {
                Logger.getLogger(ListStore.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    public boolean contains(String value){
        return this.values.contains(value);
    }
    
    public void add(String value){
        if(this.contains(value)==false){
        this.values.add(value);
        }
    }
    
    public void remove(String value){
        this.values.remove(value);
    }
    
    public ArrayList<String> getValues(){
    return this.values;
}
}

